---

- hosts: all
  tasks:

    # System
    - name: Installing Avahi
      apt: name=avahi-daemon state=present

    - name: Installing Samba
      apt: name=samba state=present

    - name: Installing CURL
      apt: name=curl state=present

    # PHP
    - name: Installing PHP5 CLI
      apt: name=php5-cli state=present

    - name: Not being evil and installing PHP JSON
      apt: name=php5-json state=present

    - name: Installing PHP MySQL
      apt: name=php5-mysql state=present

    - name: Installing PHP Redis
      apt: name=php5-redis state=present

    - name: Installing PHP MCrypt
      apt: name=php5-mcrypt state=present

    - name: Installing PHP GD
      apt: name=php5-gd state=present

    - name: Installing PHP Curl
      apt: name=php5-curl state=present

    - name: Enabling MCrypt module
      command: php5enmod mcrypt

    - name: Installing git
      apt: name=git state=present

    #
    # Composer
    #
    # In order to automate installation of dependencies, you must set up some form of authentication for github.
    #
    # This unfortunately means I can't have the VMs do all this themselves, bur rest assured if github auth is configured, these lines work!
    #
    - name: Install composer
      shell: curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin creates=/usr/local/bin/composer
      tags: composer

    - name: Rename composer.phar to composer
      shell: mv /usr/local/bin/composer.phar /usr/local/bin/composer creates=/usr/local/bin/composer
      tags: composer

    - name: Make composer executable
      shell: chmod a+x /usr/local/bin/composer
      tags: composer

    - name: Install Project Dependencies
      shell: composer install --prefer-source --no-interaction -n > app/storage/logs/composer.log chdir=/vagrant


- hosts: front
  tasks:

    - name: Cleaning images directory
      command: rm /vagrant/public/imager/* -Rf

    - name: Installing Python MySQL
      apt: name=python-mysqldb state=present

    - name: Installing PHP and Apache
      apt: name=libapache2-mod-php5 state=present

    - name: Allow www-data to see Vagrant files
      action: user name=www-data groups=vagrant append=true

    - name: Copying redis config
      copy: src=redis.conf dest=/etc/redis/ mode=0644

    - name: Installing Redis Server
      apt: name=redis-server state=present

    - name: Copying MySQL config
      copy: src=my.cnf dest=/etc/mysql/ mode=0644

    - name: Installing MySQL Server
      apt: name=mysql-server state=present

    - name: Allow mysql to see Vagrant files
      action: user name=mysql groups=vagrant append=true

    - name: Granting root login from anywhere
      mysql_user: name=root priv=*.*:ALL password='' host=% state=present

    - name: Creating MySQL Schema
      mysql_db: name=laravel201 state=present
      notify: Restart MySQL

    - name: Enable mod_rewrite
      command: a2enmod rewrite

    - name: Create our VirtualHost
      copy: src=laravel-201.conf dest=/etc/apache2/sites-available/ mode=0644

    - name: Disable the default VirtualHost
      command: a2dissite 000-default

    - name: Enable our VirtualHost
      command: a2ensite laravel-201
      notify:
        - Restart Apache

    - name: Run project migrations
      shell: ./artisan migrate --force > app/storage/logs/project_migrations.log chdir=/vagrant

    - name: Run Imager migrations
      shell: ./artisan migrate --force --package="tippingcanoe/imager" > app/storage/logs/imager_migrations.log chdir=/vagrant

    - name: Create SSH user for workers
      action: user name=worker password=$6$J4gaHlKW$A7uYZ/lr/8s3k/ytTJKSS4U9NEe60puKgYFmvZLHvT8QWcvRJx5UcxCSL9yrpXFNgBEfmWQLMSV4EjKQes3lI. shell=/bin/bash groups=vagrant

  handlers:
    - name: Restart Apache
      service: name=apache2 state=restarted

    - name: Restart MySQL
      service: name=mysql state=restarted
